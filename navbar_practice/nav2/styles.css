:root{
    --font-size: 16px;
    --clr-txt: #000000;
    --clr-primary: #ff5e5e;
    --clr-background: #ffffff;
}

body{
    background-color: var(--clr-background);
    margin: 0;
    padding:0;
    height: 100vh;
    font-family: 'Poppins', sans-serif;
    font-size: 1em;
}

.nav-container{
    position: fixed;
    display: flex;
    background-color: var(--clr-primary);
    color: var(--clr-txt);
    font-size: var(--font-size);
    height: 6em;
    width: 100vw;
    align-items: center;
    justify-content: flex-end;
}

.nav-container img{
    height: 80%;
    border: 3px solid #ffffff;
    border-radius: 100%;
    margin-left: 2em;
    margin-right: auto;
}

.items{
    display: flex;
    font-size: 1.2em;
    
}

.items li{
    list-style: none;
    padding-right: 1em;
}

.items li a{
    text-decoration: none;
    color: var(--clr-txt);
}

.items li a:hover{
    color: var(--clr-background);
}

.content{
    /* Ok, this needs to be here, otherwise the fixed navbar
    will cover up the top of the .content div, and there will
    be a gap above the top of the navbar. */
    padding-top: 8em;
    padding-bottom: 0;
    margin-left: 0;
    text-align: center;
}

.home{
    height: 87vh;
}

.books{
    height: 100vh;
    width: 100vw;
    background-color: var(--clr-primary);
    padding-top: 10%;
}

.bio{
    height: 100vh;
    width: 100vw;
    background-color: var(--clr-background);
    padding-top: 10%;
}

.bio-block{
    display: flex;
    margin: 6%;
}

#bio-pic{
    height: 250px;
}

/* Hide mobile nav while in desktop view. It has to be this way
(as opposed to display: none, because there is no opposite of none
in display for the mobile view. And any other option just causes
placement problems. Easier and quicker this way (for now). */
.mobile-nav{
    height: 0;
    width: 0;
    visibility: hidden;
}

@media screen and (max-width: 600px){
    .nav-container{
        font-size: .8em;
        height: 5em;
    }

    .home{
        font-size: .6rem;
    }

    .mobile-nav{
        visibility: visible;
        height: 100%;
        margin-top: -0.5rem; /* Put menu in vertical center of navbar */
    }

    .nav-toggle{
        position: absolute;
        cursor: pointer;
        margin: 0rem 1rem;
        right: 0; /* pushes menu over to right side */
    }

    svg{
        width: 1.5rem;
        margin-right: 1rem;
    }

    .close{
       display: none; 
    }

    .checkbox{
        display: none; /* This had already disappeared, but just in case */
    }

    /* Remove desktop navbar lis */
    .items{
        display: none;
    }

    .nav-menu{
        display: flex;
        flex-direction: column;
        gap: 2rem;
        align-items: center;
        padding-top: 1rem;
        margin-left: -8rem;  /* For some reason I need to do this to move them under
        the hamburger menu icon. */
        list-style: none;
        background-color: var(--clr-primary);
    }

    .nav-menu :first-child{
        padding-top: 2rem;
    }

    .nav-menu :last-child{
        padding-bottom: 1rem;
    }

    .nav-menu li{
        display: none; /* hide menu items until hamburger clicked */
        width: 100%;
    }

    .nav-menu a{
        text-decoration: none; /* Remove underline */
        color: inherit; /* inherit black color from desktop view */
    }

    .nav-menu a:hover{
        color: var(--clr-primary);
    }    

    /* Ok... so here we say when nav-checkbox (hamburger) is clicked, we use
    the '~' to refer to the ul with class nav-menu, and specifically its li items. */
    #nav-checkbox:checked ~ ul.nav-menu li{
        display: block;
    }

    /* Make the close icon visible when the hamburger is clicked. */
    #nav-checkbox:checked ~ label.nav-toggle .close{
        display: block;
        margin-top: -.2rem; /* Need this to place it exactly where hamburger was. */
    }

    /* Make the hamburger disappear when clicked (replaced by close icon). */
    #nav-checkbox:checked ~ label.nav-toggle .menu{
        display: none;
    }    

    .bio-block{
        display: flex;
        flex-direction: column;
        margin: 5%;
        justify-content: center;
    }
    
    #bio-pic{
        width: 70%;
        height: auto;
        margin: auto;
    }
}

@media screen and (max-width: 450px){
    .nav-container{
        font-size: .6em;
        height: 4em;
    }

    .content{
        font-size: .7em;
    }

    .mobile-nav{
        margin-top: -1.5rem; /* Put menu in center of navbar */
        
    }
}